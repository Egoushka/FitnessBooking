{"version":3,"sources":["./src/app/model/user/login.model.ts","./src/app/components/sectionSchedules-page/subscribe-page/subscribe.component.html","./src/app/components/sectionSchedules-page/subscribe-page/subscribe.component.ts","./src/app/components/coaches-page/add-edit-coach/add-edit-coach.component.ts","./src/app/components/coaches-page/add-edit-coach/add-edit-coach.component.html","./src/app/shared/api/subscriptionManagerApi.service.ts","./src/app/model/coach/updateCoach.model.ts","./src/app/shared/api/sectionScheduleApi.service.ts","./src/app/model/sectionSchedule/newSectionSchedule.model.ts","./src/app/model/visitorSchedule/newVisitorSchedule.model.ts","./src/app/model/enums/visitType.enum..ts","./src/app/components/coaches-page/coaches-page.component.html","./src/app/components/coaches-page/coaches-page.component.ts","./src/environments/environment.ts","./src/app/components/visitor-home-page/visitor-home-page.component.ts","./src/app/components/visitor-home-page/visitor-home-page.component.html","./src/app/model/requests/visitorSchedule.request.ts","./src/app/shared/service/visitorSchredule.service.ts","./src/app/model/requests/sectionSchedule.request.ts","./src/app/shared/service/user.service.ts","./src/app/model/gym/newGym.model.ts","./src/app/shared/service/log.service.ts","./src/app/components/home-page/add-edit-gym/add-edit-gym.component.html","./src/app/components/home-page/add-edit-gym/add-edit-gym.component.ts","./src/app/shared/api/sectionManagerApi.service.ts","./src/app/model/enums/roles.enum.ts","./src/app/components/sections-page/sections-page.component.html","./src/app/components/sections-page/sections-page.component.ts","./src/app/model/user/register.model.ts","./src/app/shared/api/coachManagenerApi.service.ts","./src/app/shared/service/section.service.ts","./src/app/shared/api/gymManagementApi.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/tools/timeSpan.ts","./src/app/model/enums/sheduleStatus.enum.ts","./src/app/shared/service/gym.service.ts","./src/app/model/requests/section.request.ts","./src/app/app.module.ts","./src/app/shared/api/userManagerApi.service.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/model/requests/coach.request.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/helpers/error.interceptor.ts","./src/app/model/requests/gym,request.ts","./src/app/model/section/newSection.model.ts","./src/app/shared/service/sectionSchedule.service.ts","./src/app/model/gym/updateSection.model.ts","./src/app/model/section/updateSection.model.ts","./src/app/shared/service/coach.service.ts","./src/app/model/coach/newCoach.model.ts","./src/app/components/sectionSchedules-page/section-schedules-page.component.ts","./src/app/components/sectionSchedules-page/section-schedules-page.component.html","./src/app/components/sections-page/add-edit-section/add-edit-section.component.ts","./src/app/components/sections-page/add-edit-section/add-edit-section.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/app-routing.module.ts","./src/app/model/sectionSchedule/updateSectionSchedule.model.ts","./src/app/components/sectionSchedules-page/add-edit-section-schedule/add-edit-section-schedule.component.ts","./src/app/components/sectionSchedules-page/add-edit-section-schedule/add-edit-section-schedule.component.html","./src/app/model/requests/user.request.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class UserLoginModel {\r\n  constructor(email: string, password: string) {\r\n    this.email = email;\r\n    this.password = password;\r\n  }\r\n  email: string;\r\n  password: string;\r\n}\r\n","<h1>Subscribe</h1>\n<div class=\"card\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label>Date</label>\n        <input\n          type=\"date\"\n          formControlName=\"date\"\n          class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': submitted && f.date.errors }\"\n        />\n        <div *ngIf=\"submitted && f.date.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.date.errors.reqiired\">Date is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n          <span\n            *ngIf=\"loading\"\n            class=\"spinner-border spinner-border-sm mr-1\"\n          ></span>\n          Save\n        </button>\n        <a routerLink=\"/section-schedule-page\" class=\"btn btn-link\">Cancel</a>\n      </div>\n    </form>\n  </div>\n</div>\n","import { VisitType } from './../../../model/enums/visitType.enum.';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { VisitorScheduleService } from 'src/app/shared/service/visitorSchredule.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subscribe',\n  templateUrl: './subscribe.component.html'\n})\nexport class SubscribeComponent implements OnInit {\n\n  public form: FormGroup;\n  sectionScheduleId: number;\n  userId: number;\n  loading: boolean = false;\n  submitted: boolean = false;\n  constructor(\n    private service: VisitorScheduleService,\n    private formBuilder: FormBuilder,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.sectionScheduleId = +history.state.sectionScheduleId;\n    this.userId = +history.state.userId;\n\n    this.form = this.formBuilder.group({\n      date:[new Date().getDate()]\n    })\n  }\n  get f(){\n    return this.form.controls;\n  }\n  onSubmit(): void{\n  this.submitted = true;\n  if(this.form.invalid){\n      return;\n    }\n    this.loading = true;\n    this.createVisitorSchedule();\n  }\n  private createVisitorSchedule(){\n    this.service.add(this.userId, new Date(this.f.date.value), this.sectionScheduleId).subscribe((result) => {\n      this.router.navigate(['section-schedule-page']);\n    });\n\n  }\n}\n\n","import { Roles } from './../../../model/enums/roles.enum';\r\nimport { User } from './../../../model/user/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CoachService } from 'src/app/shared/service/coach.service';\r\nimport { LogService } from 'src/app/shared/service/log.service';\r\nimport { AuthService } from 'src/app/shared/service/user.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({ templateUrl: 'add-edit-coach.component.html' })\r\nexport class AddEditCoachComponent implements OnInit {\r\n  form: FormGroup;\r\n  id: number;\r\n  userId: number;\r\n  sectionId: number;\r\n  isAddMode: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private coachService: CoachService,\r\n    private logger: LogService,\r\n    private authService: AuthService\r\n  ) {}\r\n  public users: User[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.sectionId = +sessionStorage.getItem('sectionId');\r\n    this.authService\r\n      .get(null, Roles.Coach)\r\n      .subscribe((users) => {\r\n        this.users = users\r\n        console.log(this.users)\r\n      });\r\n\r\n    this.form = this.formBuilder.group({\r\n      coach: [\r\n        '',\r\n        Validators.required\r\n      ],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.createCoach();\r\n  }\r\n\r\n  private createCoach(): void {\r\n\r\n    this.coachService\r\n      .add(this.sectionId, this.findCoachInUsersByName(this.f.coach.value))\r\n      .subscribe((result) => {\r\n        this.exit();\r\n      });\r\n  }\r\n  findCoachInUsersByName(coachName: string): number{\r\n    this.users.forEach(item => {\r\n      if(item.name == coachName)\r\n        return item.id;\r\n    });\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: \"Some error occured in add-edit-coach-component method -> findCoachInUsersByName. Its suppose to be error with names comparing\"\r\n    })\r\n    return null;\r\n  }\r\n  private exit() {\r\n    sessionStorage.removeItem('coaches');\r\n    this.router.navigate(['coaches']);\r\n  }\r\n}\r\n","<h1>Add coach</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group col\">\r\n    Coach\r\n    <select formControlName =\"coach\"  >\r\n      <option *ngFor=\"let item of users\" [label]=\"item.name\"\r\n      [value]=\"item.name\"></option>\r\n    </select>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n      <span\r\n        *ngIf=\"loading\"\r\n        class=\"spinner-border spinner-border-sm mr-1\"\r\n      ></span>\r\n      Save\r\n    </button>\r\n    <a routerLink=\"/sections\" class=\"btn btn-link\">Cancel</a>\r\n  </div>\r\n</form>\r\n","import { VisitorSchedule } from '../../model/visitorSchedule/visitorSchedule.model';\r\nimport { NewVisitorSchedule } from '../../model/visitorSchedule/newVisitorSchedule.model';\r\nimport { RemoveVisitorSchedule } from '../../model/visitorSchedule/removeVisitorSchedule.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { VisitorScheduleRequest } from 'src/app/model/requests/visitorSchedule.request';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SubscriptionManagerApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private url = environment.baseUrl + 'Subscription/';\r\n\r\n  public subscribe(sectionSchedule: NewVisitorSchedule): any {\r\n    const endpointUrl = this.url + \"subscribe/\";\r\n    console.log(sectionSchedule)\r\n    return this.http\r\n      .post(endpointUrl, sectionSchedule)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public unSubscribe(visitorSchredul: RemoveVisitorSchedule): any {\r\n    const endpointUrl = this.url;\r\n    return this.http\r\n      .put(endpointUrl, visitorSchredul)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n  public get(visitorSchreduleRequest: VisitorScheduleRequest): any {\r\n    return this.http.get<VisitorSchedule[]>(this.url, {\r\n      params: {\r\n        userId:\r\n             visitorSchreduleRequest.userId.toString(),\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class UpdateCoach {\n  constructor(id: number, sectionId: number) {\n    this.sectionId = sectionId;\n    this.id = id;\n  }\n  public id: number;\n  public sectionId: number;\n}\n","import { SectionSchedule } from '../../model/sectionSchedule/sectionSchedule.model';\r\nimport { UpdateSectionSchredule } from '../../model/sectionSchedule/updateSectionSchedule.model';\r\nimport { NewSectionSchedule } from '../../model/sectionSchedule/newSectionSchedule.model';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { SectionScheduleRequest } from 'src/app/model/requests/sectionSchedule.request';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SectionScheduleManagerApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private url = environment.baseUrl + 'SectionSchredule/';\r\n\r\n  public add(sectionSchedule: NewSectionSchedule): any {\r\n    const endpointUrl = this.url;\r\n    return this.http\r\n      .post(endpointUrl, sectionSchedule)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public update(sectionSchedule: UpdateSectionSchredule): any {\r\n    const endpointUrl = this.url;\r\n    return this.http\r\n      .put(endpointUrl, sectionSchedule)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public get(request: SectionScheduleRequest): Observable<SectionSchedule[]> {\r\n    return this.http.get<SectionSchedule[]>(this.url, {\r\n      params: {\r\n        sectionId:\r\n          request.sectionId == null ? '' : request.sectionId.toString(),\r\n        startHour:\r\n          request.startHour == null ? '' : request.startHour.toString(),\r\n        endHour: request.endHour == null ? '' : request.endHour.toString()\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { TimeSpan } from './../../tools/timeSpan';\r\nexport class NewSectionSchedule {\r\n  sectionId: number;\r\n  startHour: number;\r\n  endHour: number;\r\n\r\n  constructor(\r\n    sectionId: number,\r\n    startHour: number,\r\n    endHour: number\r\n  ) {\r\n    this.sectionId = sectionId;\r\n    this.startHour = startHour;\r\n    this.endHour = endHour;\r\n  }\r\n}\r\n","export class NewVisitorSchedule {\r\n  userId: number;\r\n  day: Date;\r\n  sectionScheduleId: number;\r\n\r\n  constructor(\r\n    userId: number,\r\n    day: Date,\r\n    sectionScheduleId: number\r\n  ) {\r\n    this.userId = userId;\r\n    this.day = day;\r\n    this.sectionScheduleId = sectionScheduleId;\r\n  }\r\n}\r\n","export enum VisitType{\r\n  OneTime = 1,\r\n  LongTime = 2,\r\n  WithCoach = 3\r\n}\r\n","<div class=\"m-a-1\">\r\n  <h2 class=\"text-xs-center\">Coaches</h2>\r\n  <table class=\"table table-bordered table-striped p-a-1\">\r\n    <thead>\r\n      <tr>\r\n        <th>Id</th>\r\n        <th>SectionId</th>\r\n        <th>UserId</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of coaches$\">\r\n        <td class=\"text-xs-right\">\r\n          {{ item.id }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ item.sectionId }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ item.userId }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          <button class=\"btn btn-lg btn-dark\" (click)='editCoach(item.id,item.userId)'>\r\n            Edit\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    <tfoot>\r\n      <td class=\"text-xs-right\">\r\n        <button class=\"btn btn-lg btn-dark\" (click)='newCoach()'>\r\n          Add\r\n        </button>\r\n      </td>\r\n    </tfoot>\r\n  </table>\r\n</div>\r\n","import { CoachService } from '../../shared/service/coach.service';\nimport { Coach } from 'src/app/model/coach/coach.model';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-coaches-page',\n  templateUrl: './coaches-page.component.html',\n})\nexport class CoachesPageComponent implements OnInit {\n  public coaches$: Coach[] = [];\n  constructor(public coachService: CoachService, private router: Router) {}\n\n  ngOnInit() {\n    this.coachService.get().subscribe((values) => {\n      this.coaches$ = values;\n      console.log(this.coaches$)\n    });\n  }\n  editCoach(id: number, userId: number) {\n    sessionStorage.setItem('coachId', id.toString());\n    sessionStorage.setItem('userId', userId.toString());\n    sessionStorage.setItem('coaches', JSON.stringify(this.coaches$));\n\n    this.router.navigate([`add-edit-coach-page`]);\n  }\n  newCoach() {\n    this.router.navigate([`add-edit-coach-page`]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:4671/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AuthService } from 'src/app/shared/service/user.service';\nimport { LogService } from './../../shared/service/log.service';\nimport { ScheduleStatus } from './../../model/enums/sheduleStatus.enum';\nimport { VisitType } from '../../model/enums/visitType.enum.';\nimport { VisitorSchedule } from './../../model/visitorSchedule/visitorSchedule.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VisitorScheduleService } from 'src/app/shared/service/visitorSchredule.service';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-visitor-home-page',\n  templateUrl: './visitor-home-page.component.html',\n})\nexport class VisitorHomePageComponent implements OnInit {\n  public visitorSchedules$: VisitorSchedule[] = [];\n  VisitType = VisitType;\n  ScheduleStatus = ScheduleStatus;\n  constructor(\n    private visitorScheduleService: VisitorScheduleService,\n    private authService: AuthService,\n    private logger: LogService\n  ) {\n  }\n  ngOnInit() {\n    const userId: number = +this.authService.getUserId();\n    this.visitorScheduleService.get(userId).subscribe(visitorSchedules =>{\n      this.visitorSchedules$ = visitorSchedules;\n    });\n  }\n}\n","<div class=\"m-a-1\">\n  <h2 class=\"text-xs-center\">Sections</h2>\n  <table class=\"table table-bordered table-striped p-a-1\">\n    <thead>\n      <tr>\n        <th>Id</th>\n        <th>VisitType</th>\n        <th>Day</th>\n        <th>Status</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of visitorSchedules$\">\n        <td class=\"text-xs-right\">\n          {{ item.id }}\n        </td>\n        <td class=\"text-xs-right\">\n          {{ VisitType[item.visitTypeId] }}\n        </td>\n        <td class=\"text-xs-right\">\n          {{ item.day|date }}\n        </td>\n        <td class=\"text-xs-right\">\n          {{ ScheduleStatus[item.statusId] }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n","export class VisitorScheduleRequest {\r\n  userId: number;\r\n\r\n  constructor(userId: number) {\r\n    this.userId = userId\r\n  }\r\n\r\n\r\n}\r\n","import { NewVisitorSchedule } from '../../model/visitorSchedule/newVisitorSchedule.model';\r\nimport { SubscriptionManagerApiService } from '../api/subscriptionManagerApi.service';\r\nimport { LogService } from './log.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { VisitorScheduleRequest } from 'src/app/model/requests/visitorSchedule.request';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class VisitorScheduleService {\r\n  constructor(\r\n    private subscriptionManagerApiService: SubscriptionManagerApiService,\r\n    private log: LogService\r\n  ) {\r\n  }\r\n  add(\r\n    userId: number,\r\n    day: Date,\r\n    sectionScheduleId: number\r\n\r\n  ): any {\r\n    const newObj = new NewVisitorSchedule(\r\n      userId,\r\n      day,\r\n      sectionScheduleId,\r\n    );\r\n    return this.subscriptionManagerApiService.subscribe(newObj);\r\n\r\n  }\r\n\r\n  get(\r\n    userId: number\r\n  ): any {\r\n    const request = new VisitorScheduleRequest(userId);\r\n    return this.subscriptionManagerApiService.get(request);\r\n  }\r\n}\r\n","import { TimeSpan } from \"src/app/tools/timeSpan\";\r\n\r\nexport class SectionScheduleRequest {\r\n  sectionId: number;\r\n  startHour: number;\r\n  endHour: number;\r\n\r\n  constructor(\r\n    sectionId: number,\r\n    startHour: number,\r\n    endHour: number,\r\n  ) {\r\n    this.sectionId = sectionId;\r\n    this.startHour = startHour;\r\n    this.endHour = endHour;\r\n  }\r\n}\r\n","import { UserRegisterModel } from '../../model/user/register.model';\r\nimport { UserLoginModel } from '../../model/user/login.model';\r\nimport { LogService } from './log.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserManagerApiService } from '../api/userManagerApi.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UserRequest } from 'src/app/model/requests/user.request';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private userService: UserManagerApiService,\r\n    public router: Router,\r\n    private log: LogService,\r\n    private jwtHelper: JwtHelperService\r\n  ) {}\r\n\r\n  public signIn(email: string, password: string) {\r\n    const user = new UserLoginModel(email, password);\r\n    this.userService.postLogin(user).subscribe((result) => {\r\n      console.log(result)\r\n      if (!(result && result.access_token)) {\r\n        return;\r\n      }\r\n      localStorage.setItem('access_token', result.access_token);\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n\r\n  public signUp(\r\n    email: string,\r\n    username: string,\r\n    password: string,\r\n    repeatPassword: string,\r\n    roleId: number\r\n  ) {\r\n    const registerUser = new UserRegisterModel(\r\n      username,\r\n      email,\r\n      password,\r\n      repeatPassword,\r\n      roleId\r\n    );\r\n    this.userService.putRegistration(registerUser).subscribe((result) => {\r\n      if (!(result && result.access_token)) {\r\n        return;\r\n      }\r\n      localStorage.setItem('access_token', result.access_token);\r\n      this.router.navigate(['/']);\r\n    });\r\n  }\r\n  public get(id?: number, roleId?: number, name?: string, email?:string ){\r\n    const request = new UserRequest(id, roleId, name, email);\r\n\r\n    return this.userService.get(request);\r\n  }\r\n  public logOut() {\r\n    localStorage.removeItem('access_token');\r\n  }\r\n  hasRestrictions(pageRestrictions: string[]): boolean {\r\n    let result = false;\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      const restriction: string = this.jwtHelper.decodeToken(token).grants;\r\n      if (pageRestrictions && pageRestrictions.length > 0) {\r\n        if (restriction) {\r\n          for (let i = 0; i < pageRestrictions.length; ++i) {\r\n            pageRestrictions[i] = pageRestrictions[i].toLowerCase();\r\n          }\r\n          result = pageRestrictions.includes(restriction.toLowerCase());\r\n        }\r\n      } else {\r\n        result = true;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n  getUserId(): string {\r\n    let result = \"\"\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      result = this.jwtHelper.decodeToken(token).sub;\r\n      }\r\n    return result;\r\n  }\r\n}\r\n","export class NewGym {\r\n  name: string;\r\n  location: string;\r\n\r\n  constructor(name: string, location: string, description: string) {\r\n    this.name = name;\r\n    this.location = location;\r\n    this.description = description;\r\n  }\r\n  description: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\n\r\nexport class LogService {\r\n    log(msg: any) {\r\n        console.log(new Date().toLocaleTimeString() + \": \\n\" + JSON.stringify(msg));\r\n    }\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add Gym</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit Gym</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group col\">\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\r\n      />\r\n      <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.name.hasError('required')\">Name is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label>Location</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"location\"\r\n        class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.location.errors }\"\r\n      />\r\n      <div *ngIf=\"submitted && f.location.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.location.hasError('required')\">Location is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label>Description</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"description\"\r\n        class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\"\r\n      />\r\n      <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.description.hasError('required')\">Description is required</div>\r\n      </div>\r\n    </div>\r\n    <div class = \"form-group\">\r\n      <button [disabled] = \"loading\" class = \"btn btn-primary\">\r\n        <span *ngIf=\"loading\" class = \"spinner-border spinner-border-sm mr-1\"></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/\" class = \"btn btn-link\">Cancel</a>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { GymService } from 'src/app/shared/service/gym.service';\r\nimport { LogService } from 'src/app/shared/service/log.service';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  NumberValueAccessor,\r\n  Validators,\r\n} from '@angular/forms';\r\n@Component({ templateUrl: 'add-edit-gym.component.html' })\r\nexport class AddEditGymComponent implements OnInit {\r\n  form: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  id: number;\r\n  isAddMode: boolean;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private gymService: GymService,\r\n    private logger: LogService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = +sessionStorage.getItem('gymId');\r\n    this.isAddMode = !this.id;\r\n    this.form = this.formBuilder.group({\r\n      name: [this.isAddMode ? '' : sessionStorage.getItem('name')],\r\n      location: [this.isAddMode ? '' : sessionStorage.getItem('location')],\r\n      description: [this.isAddMode ? '' : sessionStorage.getItem('description')],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.isAddMode) {\r\n      this.createGym();\r\n    } else {\r\n      this.updateGym();\r\n    }\r\n  }\r\n\r\n  private createGym(): void {\r\n    this.gymService\r\n      .add(this.f.name.value, this.f.location.value, this.f.description.value)\r\n      .subscribe((result) => {\r\n        sessionStorage.removeItem('gymId');\r\n\r\n        this.exit();\r\n      });\r\n  }\r\n\r\n  private updateGym(): void {\r\n    this.gymService\r\n      .update(\r\n        this.id,\r\n        this.f.name.value,\r\n        this.f.location.value,\r\n        this.f.description.value\r\n      )\r\n      .subscribe((result) => {\r\n        sessionStorage.removeItem('name');\r\n        sessionStorage.removeItem('location');\r\n        sessionStorage.removeItem('description');\r\n\r\n        this.exit();\r\n      });\r\n  }\r\n  private exit(){\r\n    sessionStorage.removeItem('gymId');\r\n    \r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","import { UpdateSection } from '../../model/section/updateSection.model';\r\nimport { Section } from '../../model/section/section.model';\r\nimport { SectionRequest } from '../../model/requests/section.request';\r\nimport { NewSection } from '../../model/section/newSection.model';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SectionManagerApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private url = environment.baseUrl + 'Section/';\r\n\r\n  public add(section: NewSection): any {\r\n    const endpointUrl = this.url;\r\n\r\n    return this.http\r\n      .post(endpointUrl, section)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public update(section: UpdateSection): any {\r\n    const endpointUrl = this.url;\r\n    return this.http\r\n      .put(endpointUrl, section)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public get(sectionRequest: SectionRequest) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n    };\r\n\r\n    return this.http.get<Section[]>(this.url, {\r\n      params: {\r\n        coachId:\r\n          sectionRequest.name == null ? '' : sectionRequest.name.toString(),\r\n        name:\r\n          sectionRequest.coachId == null ? '' : sectionRequest.coachId.toString(),\r\n        gymId:\r\n          sectionRequest.gymId == null ? '' : sectionRequest.gymId.toString(),\r\n        typeId:\r\n          sectionRequest.typeId == null ? '' : sectionRequest.typeId.toString(),\r\n      },\r\n    });\r\n  }\r\n}\r\n","export enum Roles\r\n{\r\n    Visitor = 1,\r\n    Administrator = 2,\r\n    Coach = 3\r\n}\r\n","<div class=\"m-a-1\">\n  <h2 class=\"text-xs-center\">Sections</h2>\n  <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\n    <td class=\"text-xs-right\">\n      <button class=\"btn btn-lg btn-dark\" (click)=\"addCoach()\">\n        Add coach\n      </button>\n    </td>\n  </div>\n  <table class=\"table table-bordered table-striped p-a-1\">\n    <thead>\n      <tr>\n        <th>Id</th>\n        <th>Name</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of sections$\">\n        <td class=\"text-xs-right\">\n          {{ item.id }}\n        </td>\n        <td class=\"text-xs-right\">\n          {{ item.name }}\n        </td>\n        <td class=\"text-xs-right\">\n          <button class=\"btn btn-lg btn-dark\" (click)=\"viewSchedules(item.id)\">\n            View Schedules\n          </button>\n        </td>\n        <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\n          <td class=\"text-xs-right\">\n            <button\n              class=\"btn btn-lg btn-dark\"\n              (click)=\"deleteSection(item.id)\"\n            >\n              Delete\n            </button>\n          </td>\n\n          <td class=\"text-xs-right\">\n            <button\n              class=\"btn btn-lg btn-dark\"\n              (click)=\"editSection(item.id, item.typeId, item.name)\"\n            >\n              Edit\n            </button>\n          </td>\n        </div>\n      </tr>\n    </tbody>\n    <tfoot>\n      <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\n        <td class=\"text-xs-right\">\n          <button class=\"btn btn-lg btn-dark\" (click)=\"addSection()\">\n            Add section\n          </button>\n        </td>\n      </div>\n    </tfoot>\n  </table>\n</div>\n","import { LogService } from './../../shared/service/log.service';\nimport { SectionService } from './../../shared/service/section.service';\nimport { Section } from './../../model/section/section.model';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/service/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sections-page',\n  templateUrl: './sections-page.component.html'\n})\nexport class SectionsPageComponent implements OnInit {\n  public sections$: Section[];\n  private gymId:number;\n  constructor(\n    private router: Router,\n    private sectionService: SectionService,\n    public authService: AuthService,\n    private logger: LogService\n  ){}\n\n  ngOnInit(): void {\n    this.gymId = +sessionStorage.getItem('gymId')\n    this.sectionService.get(null, null, this.gymId, null).subscribe(values=>{\n      this.sections$ = values;\n    })\n  }\n  deleteSection(sectionId:number){\n    this.logger.log(\"Section deleted\")\n  }\n  addSection(){\n    sessionStorage.setItem('gymId', this.gymId.toString());\n    this.router.navigate([`add-edit-section-page`]);\n  }\n  editSection( sectionId: number,typeId: number, name: string){\n    this.router.navigate([`add-edit-section-page`], {state:{\n      sectionId: sectionId,\n      typeId: typeId,\n      name: name\n    }});\n  }\n  viewSchedules(sectionId:number){\n    sessionStorage.setItem('sectionId', sectionId.toString());\n    this.router.navigate([`section-schedules-page`]);\n  }\n  addCoach(){\n    this.router.navigate(['add-edit-coach-page'])\n  }\n}\n","export class UserRegisterModel {\r\n  constructor(\r\n    email: string,\r\n    username: string,\r\n    password: string,\r\n    repeatPassword: string,\r\n    roleId: number\r\n  ) {\r\n    this.email = email;\r\n    this.name = username;\r\n    this.password = password;\r\n    this.repeatPassword = repeatPassword;\r\n    this.roleId = roleId;\r\n  }\r\n  email: string;\r\n  name: string;\r\n  password: string;\r\n  repeatPassword: string;\r\n  roleId: number;\r\n}\r\n","import { CoachRequest } from '../../model/requests/coach.request';\nimport { Coach } from '../../model/coach/coach.model';\nimport { UpdateCoach } from '../../model/coach/updateCoach.model';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { NewCoach } from '../../model/coach/newCoach.model';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CoachManagenerApiService {\n  constructor(private http: HttpClient) {}\n\n  private url = environment.baseUrl + 'Coach/';\n\n  public add(coach: NewCoach): any {\n    const endpointUrl = this.url;\n\n    return this.http\n      .post(endpointUrl, coach)\n      .pipe(catchError((error) => of(console.log(error))));\n  }\n\n  public update(coach: UpdateCoach): any {\n    const endpointUrl = this.url;\n    console.log(coach);\n    return this.http\n      .put(endpointUrl, coach)\n      .pipe(catchError((error) => of(console.log(error))));\n  }\n\n  public get(request: CoachRequest): Observable<Coach[]> {\n    return this.http.get<Coach[]>(this.url, {\n      params: {\n        sectionId:\n          request.sectionId == null ? '' : request.sectionId.toString(),\n      },\n    });\n  }\n}\n","import { SectionManagerApiService } from '../api/sectionManagerApi.service';\r\nimport { UpdateSection } from './../../model/section/updateSection.model';\r\nimport { NewSection } from './../../model/section/newSection.model';\r\nimport { Section } from './../../model/section/section.model';\r\nimport { SectionRequest } from './../../model/requests/section.request';\r\nimport { LogService } from './log.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SectionService {\r\n  public sections$: BehaviorSubject<Section[]>;\r\n\r\n  constructor(\r\n    private sectionManagenerApiService: SectionManagerApiService,\r\n    private log: LogService\r\n  ) {\r\n  }\r\n  get(\r\n    name?: string,\r\n    typeId?: number,\r\n    gymId?: number,\r\n    coachId?: number\r\n  ): Observable<Section[]> {\r\n    const request = new SectionRequest(name, typeId, gymId, coachId);\r\n    return this.sectionManagenerApiService.get(request);\r\n  }\r\n  add(name: string, typeId: number, gymId: number): any {\r\n    const newObj = new NewSection(name, typeId, gymId);\r\n    return this.sectionManagenerApiService.add(newObj);\r\n\r\n  }\r\n\r\n  update(\r\n    id: number,\r\n    name: string,\r\n    typeId: number,\r\n    gymId: number\r\n  ): any {\r\n    const objToUpdate = new UpdateSection(id, name, typeId, gymId);\r\n\r\n    return this.sectionManagenerApiService.update(objToUpdate);\r\n  }\r\n}\r\n","import { Gym } from '../../model/gym/gym.model';\r\nimport { GymRequest } from '../../model/requests/gym,request';\r\nimport { UpdateGym } from '../../model/gym/updateSection.model';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { NewGym } from 'src/app/model/gym/newGym.model';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GymManagerApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private url = environment.baseUrl + 'Gym/';\r\n\r\n  public add(gym: NewGym): any {\r\n    const endpointUrl = this.url;\r\n\r\n    return this.http\r\n      .post(endpointUrl, gym)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public update(gym: UpdateGym): any {\r\n    const endpointUrl = this.url;\r\n    return this.http\r\n      .put(endpointUrl, gym)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public get(request: GymRequest) {\r\n    return this.http.get<Gym[]>(this.url, {\r\n      params: {\r\n        name: request.name == null ? '' : request.name,\r\n        location: request.location == null ? '' : request.location,\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'fromt';\n}\n","<router-outlet></router-outlet>\r\n","import { AuthService } from '../../shared/service/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: 'sign-in.component.html',\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error = '';\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    if (localStorage.getItem('access_token')) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authService.signIn(this.f.username.value, this.f.password.value);\r\n  }\r\n  signUp() {\r\n    this.router.navigate(['sign-up']);\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <div class=\"card\">\r\n      <div class=\"card-body\">\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                  <label for=\"username\">Username</label>\r\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                  <label for=\"password\">Password</label>\r\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  </div>\r\n              </div>\r\n              <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                  <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  Sign In\r\n              </button>\r\n              <button class=\"btn btn-primary\" (click)=\"signUp()\">\r\n                Sign Up\r\n            </button>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n          </form>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Timestamp } from \"rxjs/internal/operators/timestamp\";\r\n\r\nconst MILLISECONDS_IN_A_SECOND: number = 1000;\r\nconst SECONDS_IN_A_MINUTE: number = 60;\r\nconst MINUTES_IN_AN_HOUR: number = 60;\r\nconst HOURS_IN_A_DAY: number = 24;\r\nconst DAYS_IN_A_WEEK: number = 7;\r\n\r\nconst MILLISECONDS_IN_A_MINUTE = MILLISECONDS_IN_A_SECOND * SECONDS_IN_A_MINUTE;\r\nconst MILLISECONDS_IN_AN_HOUR = MILLISECONDS_IN_A_MINUTE * MINUTES_IN_AN_HOUR;\r\nconst MILLISECONDS_IN_A_DAY = MILLISECONDS_IN_AN_HOUR * HOURS_IN_A_DAY;\r\nconst MILLISECONDS_IN_A_WEEK = MILLISECONDS_IN_A_DAY * DAYS_IN_A_WEEK;\r\n\r\n\r\nexport class TimeSpan {\r\n\r\n\tstatic Subtract(date1: any, date2: any) {\r\n\t\tlet milliSeconds: number = date1 - date2;\r\n\r\n\t\treturn new TimeSpan(milliSeconds);\r\n\r\n\t}\r\n\r\n\tstatic Day(): TimeSpan {\r\n\t\treturn new TimeSpan(MILLISECONDS_IN_A_DAY);\r\n\t}\r\n\tstatic Hour(): TimeSpan { return new TimeSpan(MILLISECONDS_IN_AN_HOUR); }\r\n\tstatic Week(): TimeSpan { return new TimeSpan(MILLISECONDS_IN_A_WEEK) };\r\n\tstatic Month(): TimeSpan {\r\n\t\tlet now: any = new Date();\r\n\t\tlet aMonthAgo: any = new Date();\r\n\t\taMonthAgo.setMonth(aMonthAgo.getMonth() - 1);\r\n\t\treturn new TimeSpan(now - aMonthAgo);\r\n\t}\r\n\tstatic FromStringToTimeSpan(str: string): TimeSpan {\r\n    let dataFromStr = str.split(':');\r\n    return new TimeSpan((MILLISECONDS_IN_AN_HOUR * +dataFromStr[0]) + MILLISECONDS_IN_A_MINUTE * +dataFromStr[1]);\r\n  }\r\n\r\n\tconstructor(milliSeconds: number = 0) {\r\n\t\tthis._seconds = 0;\r\n\t\tthis._minutes = 0;\r\n\t\tthis._hours = 0;\r\n\r\n\t\tthis.milliseconds = milliSeconds;\r\n\t}\r\n\taddTo(date: Date): Date {\r\n\t\tconsole.log('add ' + this.TotalMilliSeconds, this);\r\n\t\tdate.setMilliseconds(date.getMilliseconds() + this.TotalMilliSeconds);\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n\tsubtructFrom(date: Date): Date {\r\n\t\tdate.setMilliseconds(date.getMilliseconds() - this.TotalMilliSeconds);\r\n\r\n\t\treturn date;\r\n\t}\r\n\r\n  static toStringValue(time: TimeSpan){\r\n    let leftValue = time.hours;\r\n    let rightValue = time.minutes;\r\n\r\n    let answer: string = \"\";\r\n    answer = this.appendAnswer(answer, leftValue) + \":\";\r\n    console.log(answer)\r\n    answer = this.appendAnswer(answer, rightValue);\r\n    console.log(answer)\r\n    return answer;\r\n  }\r\n  static appendAnswer(str: string, value: number): string{\r\n    if(value < 10){\r\n      return str+=\"0\" + value.toString();\r\n    }\r\n    return str+=value.toString();\r\n  }\r\n\tprivate _milliseconds; number;\r\n\tprivate _totalMilliSeconds: number;\r\n\tprivate _seconds: number;\r\n\tprivate _minutes: number;\r\n\tprivate _hours: number;\r\n\r\n\tget hours(): number {\r\n\t\treturn this._hours;\r\n\t}\r\n\tset hours(value: number) {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis._hours = value;\r\n\t\tthis.calcMilliSeconds();\r\n\t}\r\n\r\n\tget minutes(): number {\r\n\t\treturn this._minutes;\r\n\t}\r\n\tset minutes(value: number) {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis._minutes = value;\r\n\t\tthis.calcMilliSeconds();\r\n\t}\r\n\r\n\tget seconds(): number {\r\n\t\treturn this._seconds;\r\n\t}\r\n\tset seconds(value: number) {\r\n\t\tthis._seconds = value;\r\n\t\tthis.calcMilliSeconds();\r\n\t}\r\n\r\n\tget milliseconds(): number {\r\n\t\treturn this._milliseconds;\r\n\t}\r\n\tset milliseconds(value: number) {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis._milliseconds = value;\r\n\t\tthis.calcMilliSeconds();\r\n\t}\r\n\r\n\tget TotalMilliSeconds() {\r\n\t\treturn this._totalMilliSeconds;\r\n\t}\r\n\r\n\tget TotalSeconds() {\r\n\t\treturn Math.round(this._totalMilliSeconds / MILLISECONDS_IN_A_SECOND);\r\n\t}\r\n\r\n\tget TotalMinutes() {\r\n\t\treturn Math.round(this._totalMilliSeconds / MILLISECONDS_IN_A_MINUTE);\r\n\t}\r\n\r\n\tget TotalHours() {\r\n\t\treturn Math.round(this._totalMilliSeconds / MILLISECONDS_IN_AN_HOUR);\r\n\t}\r\n\r\n\r\n\r\n\troundValue(origValue, maxValue) {\r\n\t\treturn { modulu: origValue % maxValue, addition: Math.round(origValue / maxValue) };\r\n\t}\r\n\r\n\r\n\r\n\tcalcMilliSeconds() {\r\n\r\n\t\tlet newMilliSecond = this.roundValue(this._milliseconds, MILLISECONDS_IN_A_SECOND);\r\n\t\tthis._milliseconds = newMilliSecond.modulu;\r\n\t\tthis._seconds += newMilliSecond.addition;\r\n\r\n\t\tlet newSecond = this.roundValue(this._seconds, SECONDS_IN_A_MINUTE);\r\n\t\tthis._seconds = newSecond.modulu;\r\n\t\tthis._minutes += newSecond.addition;\r\n\r\n\t\tlet newminutes = this.roundValue(this._minutes, MINUTES_IN_AN_HOUR);\r\n\t\tthis._minutes = newminutes.modulu;\r\n\t\tthis._hours += newminutes.addition;\r\n\r\n\t\tthis._totalMilliSeconds = this.hours * MILLISECONDS_IN_AN_HOUR + this.minutes * MILLISECONDS_IN_A_MINUTE\r\n\t\t\t+ this.seconds * MILLISECONDS_IN_A_SECOND + this.milliseconds;\r\n\t}\r\n\r\n}\r\n","export enum ScheduleStatus{\r\n  Ordered = 1,\r\n  InProgress = 2,\r\n  Cancelled = 3\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { GymRequest } from './../../model/requests/gym,request';\r\nimport { UpdateGym } from './../../model/gym/updateSection.model';\r\nimport { NewGym } from './../../model/gym/newGym.model';\r\nimport { GymManagerApiService } from '../api/gymManagementApi.service';\r\nimport { LogService } from './log.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Gym } from 'src/app/model/gym/gym.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GymService {\r\n\r\n  constructor(\r\n    private gymManagenerApiService: GymManagerApiService,\r\n    private log: LogService\r\n  ) {\r\n  }\r\n  get(name?: string, location?: string) {\r\n    const request = new GymRequest(location, name);\r\n    return this.gymManagenerApiService.get(request);\r\n  }\r\n  add(name: string, location: string, description: string): Observable<Gym[]> {\r\n    const newObj = new NewGym(name, location, description);\r\n    return this.gymManagenerApiService.add(newObj);\r\n  }\r\n\r\n  update(\r\n    id: number,\r\n    name: string,\r\n    location: string,\r\n    description: string\r\n  ): Observable<Gym[]> {\r\n    const valueToUpdate = new UpdateGym(id, name, location, description);\r\n    return this.gymManagenerApiService.update(valueToUpdate);\r\n  }\r\n}\r\n","export class SectionRequest {\r\n  name: string;\r\n  typeId: number;\r\n  gymId: number;\r\n  coachId: number;\r\n\r\n  constructor(name: string, typeId: number, gymId: number, coachId: number) {\r\n    this.name = name;\r\n    this.typeId = typeId;\r\n    this.gymId = gymId;\r\n    this.coachId = coachId;\r\n  }\r\n}\r\n","import { AddEditSectionComponent } from './components/sections-page/add-edit-section/add-edit-section.component';\nimport { VisitorHomePageComponent } from './components/visitor-home-page/visitor-home-page.component';\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { SectionsPageComponent } from './components/sections-page/sections-page.component';\nimport { CoachesPageComponent } from './components/coaches-page/coaches-page.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { LogService } from './shared/service/log.service';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AuthService } from './shared/service/user.service';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { UserManagerApiService } from './shared/api/userManagerApi.service';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { AddEditGymComponent } from './components/home-page/add-edit-gym/add-edit-gym.component';\nimport { AddEditSectionScheduleComponent } from './components/sectionSchedules-page/add-edit-section-schedule/add-edit-section-schedule.component';\nimport { AddEditCoachComponent } from './components/coaches-page/add-edit-coach/add-edit-coach.component';\nimport { SectionSchedulesPageComponent } from './components/sectionSchedules-page/section-schedules-page.component';\nimport { SubscribeComponent } from './components/sectionSchedules-page/subscribe-page/subscribe.component';\n\n@NgModule({\n\n  declarations: [\n    AppComponent,\n    SignInComponent,\n    SignUpComponent,\n    CoachesPageComponent,\n    SubscribeComponent,\n    HomePageComponent,\n    VisitorHomePageComponent,\n    SectionsPageComponent,\n    SectionSchedulesPageComponent,\n    AddEditCoachComponent,\n    AddEditSectionScheduleComponent,\n    AddEditSectionComponent,\n    AddEditGymComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    NgbModule,\n\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    AuthService,\n    UserManagerApiService,\n    LogService,\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    JwtHelperService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User } from './../../model/user/user.model';\r\nimport { UserLoginModel } from '../../model/user/login.model';\r\nimport { UserRegisterModel } from '../../model/user/register.model';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { UserRequest } from 'src/app/model/requests/user.request';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserManagerApiService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private url = environment.baseUrl + 'user/';\r\n\r\n  public putRegistration(user: UserRegisterModel): any {\r\n    const endpointUrl = this.url;\r\n\r\n    return this.http\r\n      .put(endpointUrl, user)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n\r\n  public postLogin(user: UserLoginModel): any {\r\n    const endpointUrl = this.url;\r\n\r\n    return this.http\r\n      .post(endpointUrl, user)\r\n      .pipe(catchError((error) => of(console.log(error))));\r\n  }\r\n  public get(request: UserRequest): any {\r\n    const endpointUrl = this.url;\r\n\r\n    return this.http.get<User>(endpointUrl, {\r\n      params: {\r\n        id: request.id == null ? '' : request.id.toString(),\r\n        roleId: request.roleId == null ? '' : request.roleId.toString(),\r\n        name: request.name == null ? '' : request.name,\r\n        email: request.email == null ? '' : request.email,\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"m-a-1\">\r\n  <div *ngIf=\"authService.hasRestrictions(['coach'])\">\r\n    <button class=\"btn btn-lg btn-dark\" (click)=\"showCoachPage()\">\r\n      Coach page\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\r\n    <button class=\"btn btn-lg btn-dark\" (click)=\"showAdministratorPage()\">\r\n      Edit Coaches\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"authService.hasRestrictions(['visitor'])\">\r\n    <button class=\"btn btn-lg btn-dark\" (click)=\"showVisitorPage()\">\r\n      Visitor`s subscribtions\r\n    </button>\r\n  </div>\r\n  <h2 class=\"text-xs-center\">Gyms</h2>\r\n  <table class=\"table table-bordered table-striped p-a-1\">\r\n    <thead>\r\n      <tr>\r\n        <th>Id</th>\r\n        <th>Name</th>\r\n        <th>Location</th>\r\n        <th>Description</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of gyms$\">\r\n        <td class=\"text-xs-right\">\r\n          {{ item.id }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ item.name }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ item.location }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ item.description }}\r\n        </td>\r\n        <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\r\n          <td class=\"text-xs-right\">\r\n            <button class=\"btn btn-lg btn-dark\" (click)=\"deleteGym(item.id)\">\r\n              Delete\r\n            </button>\r\n          </td>\r\n          <td class=\"text-xs-right\">\r\n            <button class=\"btn btn-lg btn-dark\" (click)=\"editGym(item.id, item.name, item.location, item.description)\">\r\n              Edit\r\n            </button>\r\n          </td>\r\n        </div>\r\n        <td class=\"text-xs-right\">\r\n          <a  class=\"btn btn-lg btn-dark\" (click) =\"showGym(item.id)\">\r\n            View\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n    <tfoot>\r\n      <td *ngIf=\"authService.hasRestrictions(['administrator'])\" class=\"text-xs-right\">\r\n        <button class=\"btn btn-lg btn-dark\" (click)=\"newGym()\">New Gym</button>\r\n      </td>\r\n      <td class=\"text-xs-right\">\r\n        <button class=\"btn btn-lg btn-dark\" (click)=\"logOut()\">LogOut</button>\r\n      </td>\r\n    </tfoot>\r\n  </table>\r\n</div>\r\n","import { AuthService } from '../../shared/service/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Gym } from 'src/app/model/gym/gym.model';\r\nimport { GymService } from 'src/app/shared/service/gym.service';\r\n@Component({\r\n  selector: 'home-page',\r\n  templateUrl: './home-page.component.html',\r\n})\r\nexport class HomePageComponent {\r\n  public gyms$: Gym[] = [];\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private gymService: GymService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  ngOnInit() {\r\n    this.gymService.get().subscribe((gyms) => (this.gyms$ = gyms));\r\n  }\r\n  showGym(id: number) {\r\n    sessionStorage.setItem('gymId', id.toString());\r\n    this.router.navigate([`sections`]);\r\n  }\r\n  logOut() {\r\n    sessionStorage.removeItem('gymId');\r\n    this.authService.logOut();\r\n    console.log(localStorage.getItem('access_token'));\r\n    this.router.navigate(['sign-in']);\r\n  }\r\n  newGym(){\r\n    this.router.navigate(['add-edit-gym-page']);\r\n  }\r\n  editGym(id: number, name: string, location: string, description: string){\r\n\r\n    sessionStorage.setItem('gymId', id.toString());\r\n    sessionStorage.setItem('name', name);\r\n    sessionStorage.setItem('location', location);\r\n    sessionStorage.setItem('description', description);\r\n\r\n    this.router.navigate(['add-edit-gym-page']);\r\n  }\r\n  showCoachPage() {\r\n    this.router.navigate(['coach-home-page']);\r\n  }\r\n  showAdministratorPage() {\r\n    this.router.navigate(['coaches']);\r\n  }\r\n  showVisitorPage() {\r\n    this.router.navigate([`visitor-home-page`]);\r\n\r\n  }\r\n}\r\n","export class CoachRequest {\r\n  id: number;\r\n  sectionId: number;\r\n  constructor(id: number, sectionId: number) {\r\n    this.sectionId = sectionId;\r\n    this.id = id;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../shared/service/user.service';\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const isApiUrl = request.url.startsWith(environment.baseUrl);\r\n    if (localStorage.getItem('access_token')) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { AuthService } from '../shared/service/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((err) => {\r\n        if (err.status === 401) {\r\n          this.authService.logOut();\r\n          location.reload(true);\r\n        }\r\n\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { SectionRequest } from './section.request';\r\n\r\nexport class GymRequest {\r\n  location: string;\r\n  name: string;\r\n\r\n  constructor(location: string, name: string) {\r\n    this.location = location;\r\n    this.name = name;\r\n  }\r\n}\r\n","import { Coach } from './../coach/coach.model';\r\nexport class NewSection {\r\n  name: string;\r\n  typeId: number;\r\n  gymId: number;\r\n\r\n  constructor(name: string, typeId: number, gymId: number) {\r\n    this.name = name;\r\n    this.typeId = typeId;\r\n    this.gymId = gymId;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\nimport { UpdateSectionSchredule } from './../../model/sectionSchedule/updateSectionSchedule.model';\nimport { NewSectionSchedule } from './../../model/sectionSchedule/newSectionSchedule.model';\nimport { TimeSpan } from './../../tools/timeSpan';\nimport { SectionScheduleRequest } from './../../model/requests/sectionSchedule.request';\nimport { SectionScheduleManagerApiService } from '../api/sectionScheduleApi.service';\nimport { Injectable } from '@angular/core';\nimport { SectionSchedule } from 'src/app/model/sectionSchedule/sectionSchedule.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SectionScheduleService {\n  constructor(private apiService: SectionScheduleManagerApiService) {}\n  get(sectionId?: number, startHour?: number, endHour?: number): Observable<SectionSchedule[]> {\n    const request = new SectionScheduleRequest(\n      sectionId,\n      startHour,\n      endHour\n    );\n    return this.apiService.get(request);\n  }\n  add(sectionId: number, startHour: number, endHour: number): any {\n    const newObj = new NewSectionSchedule(sectionId, startHour,endHour);\n    console.log(newObj)\n    return this.apiService.add(newObj);\n  }\n\n  update(id:number, sectionId: number, startHour: number, endHour: number): any {\n    const objToUpdate = new UpdateSectionSchredule(id, sectionId, startHour, endHour);\n    return this.apiService.update(objToUpdate);\n  }\n}\n","import { Section } from './../section/section.model';\r\nexport class UpdateGym {\r\n  id: number;\r\n  name: string;\r\n  location: string;\r\n  description: string;\r\n\r\n  constructor(\r\n    id: number,\r\n    name: string,\r\n    location: string,\r\n    description: string,\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.location = location;\r\n    this.description = description;\r\n  }\r\n}\r\n","import { Coach } from './../coach/coach.model';\r\nexport class UpdateSection {\r\n  constructor(\r\n    id: number,\r\n    name: string,\r\n    typeId: number,\r\n    gymId: number,\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.typeId = typeId;\r\n    this.gymId = gymId;\r\n  }\r\n  id: number;\r\n  name: string;\r\n  typeId: number;\r\n  gymId: number;\r\n}\r\n","import { map } from 'rxjs/operators';\nimport { LogService } from './log.service';\nimport { UpdateCoach } from './../../model/coach/updateCoach.model';\nimport { CoachRequest } from './../../model/requests/coach.request';\nimport { Coach } from './../../model/coach/coach.model';\nimport { NewCoach } from './../../model/coach/newCoach.model';\nimport { CoachManagenerApiService } from '../api/coachManagenerApi.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CoachService {\n\n  constructor(\n    private coachMagamentService: CoachManagenerApiService,\n    private log: LogService\n  ) {\n  }\n\n  get(id?: number, sectionId?: number): Observable<Coach[]> {\n    const request = new CoachRequest(id, sectionId);\n    return this.coachMagamentService.get(request);\n\n  }\n  add(sectionId: number, userId: number): any {\n    const newObj = new NewCoach(sectionId, userId);\n    return this.coachMagamentService.add(newObj);\n  }\n\n  update(sectionId: number, id: number): any {\n    const valueToUpdate = new UpdateCoach(id, sectionId);\n    return this.coachMagamentService.update(valueToUpdate);\n  }\n}\n","export class NewCoach {\n  constructor(sectionId: number, userId: number) {\n    this.sectionId = sectionId;\n    this.userId = userId;\n  }\n  sectionId: number;\n  userId: number;\n}\n","import { TimeSpan } from '../../tools/timeSpan';\r\nimport { AuthService } from '../../shared/service/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SectionSchedule } from 'src/app/model/sectionSchedule/sectionSchedule.model';\r\nimport { SectionScheduleService } from 'src/app/shared/service/sectionSchedule.service';\r\n\r\n@Component({\r\n  selector: 'app-section-schedules-page',\r\n  templateUrl: './section-schedules-page.component.html',\r\n})\r\nexport class SectionSchedulesPageComponent implements OnInit {\r\n  public sectionSchedules$: SectionSchedule[];\r\n  public sectionId: number;\r\n  public sectionName: string;\r\n  public timeSpan = TimeSpan;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private sectionScheduleService: SectionScheduleService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.sectionId = +sessionStorage.getItem('sectionId');\r\n    this.sectionName = sessionStorage.getItem('sectionName');\r\n    this.sectionScheduleService.get(this.sectionId).subscribe((values) => {\r\n      this.sectionSchedules$ = values;\r\n    });\r\n  }\r\n  addSectionSchedule() {\r\n    this.router.navigate(['add-edit-section-schedule-page'], {\r\n      state: { sectionId: this.sectionId },\r\n    });\r\n  }\r\n  editSectionSchedule(id: number, startHour: TimeSpan, endHour: TimeSpan) {\r\n    this.router.navigate(['add-edit-section-schedule-page'], {\r\n      state: {\r\n        id: id,\r\n        sectionId: this.sectionId,\r\n        startHour: startHour,\r\n        endHour: endHour,\r\n      },\r\n    });\r\n  }\r\n  subscribe(sectionScheduleId: number){\r\n    this.router.navigate(['subscribe-page'], {\r\n      state: {\r\n        sectionScheduleId: sectionScheduleId,\r\n        userId: this.authService.getUserId(),\r\n      },\r\n    });\r\n  }\r\n  deleteSectionSchedule(id: number) {}\r\n}\r\n","<div class=\"m-a-1\">\r\n  <h2 class=\"text-xs-center\">Section Schedule</h2>\r\n  <table class=\"table table-bordered table-striped p-a-1\">\r\n    <thead>\r\n      <tr>\r\n        <th>Id</th>\r\n        <th>Start</th>\r\n        <th>End</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of sectionSchedules$\">\r\n        <td class=\"text-xs-right\">\r\n          {{ item.id }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ timeSpan.toStringValue(item.startHour) }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          {{ timeSpan.toStringValue(item.endHour) }}\r\n        </td>\r\n        <td class=\"text-xs-right\">\r\n          <button class=\"btn btn-lg btn-dark\" (click) = \"subscribe(item.id)\">\r\n            Subscribe\r\n          </button>\r\n        </td>\r\n        <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\r\n          <td class=\"text-xs-right\">\r\n            <button class=\"btn btn-lg btn-dark\" (click)=\"editSectionSchedule(item.id, item.startHour, item.endHour)\">\r\n              Edit\r\n            </button>\r\n          </td>\r\n        </div>\r\n      </tr>\r\n    </tbody>\r\n    <tfoot>\r\n\r\n      <div *ngIf=\"authService.hasRestrictions(['administrator'])\">\r\n        <td class=\"text-xs-right\">\r\n          <button class=\"btn btn-lg btn-dark\" (click) = \"addSectionSchedule()\">\r\n            New section schedule\r\n          </button>\r\n        </td>\r\n      </div>\r\n\r\n    </tfoot>\r\n  </table>\r\n</div>\r\n","import { VisitType } from '../../../model/enums/visitType.enum.';\r\nimport { SectionService } from '../../../shared/service/section.service';\r\nimport { LogService } from '../../../shared/service/log.service';\r\nimport { CoachService } from '../../../shared/service/coach.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({ templateUrl: 'add-edit-section.component.html' })\r\nexport class AddEditSectionComponent implements OnInit {\r\n  form: FormGroup;\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  gymId: number;\r\n  isAddMode: boolean;\r\n  loading: boolean = false;\r\n  submitted: boolean = false;\r\n\r\n  visitTypes: Array<string> = [];\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private sectionService: SectionService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    for (let value in VisitType)\r\n      if (typeof VisitType[value] === 'number') this.visitTypes.push(value);\r\n\r\n    this.id = +history.state.sectionId;\r\n    this.gymId = +sessionStorage.getItem('gymId');\r\n    this.isAddMode = !this.id;\r\n\r\n    if (!this.isAddMode) {\r\n      this.name = history.state.name;\r\n      this.type = VisitType[history.state.typeId];\r\n    }\r\n\r\n    this.form = this.formBuilder.group({\r\n      name: [this.isAddMode ? '' : this.name, Validators.required],\r\n      type: [\r\n        this.visitTypes[0],\r\n        this.isAddMode ? Validators.required : Validators.nullValidator,\r\n      ],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.isAddMode) {\r\n      this.createSection();\r\n    } else {\r\n      this.updateSection();\r\n    }\r\n  }\r\n\r\n  private createSection(): void {\r\n    this.sectionService\r\n      .add(this.f.name.value, +VisitType[this.f.type.value], this.gymId)\r\n      .subscribe((result) => {\r\n        this.exit();\r\n      });\r\n  }\r\n\r\n  private updateSection(): void {\r\n    this.sectionService\r\n      .update(+this.id, this.f.name.value, +VisitType[this.f.type.value], this.gymId)\r\n      .subscribe((result) => {\r\n        this.exit();\r\n      });\r\n  }\r\n  private exit(){\r\n    this.router.navigate(['sections']);\r\n  }\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add section</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit section</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div *ngIf=\"isAddMode\">\r\n      <div class=\"form-group col\">\r\n        Visit Type\r\n        <select formControlName =\"type\"  >\r\n          <option *ngFor=\"let item of visitTypes\" [label]=\"item\"\r\n          [value]=\"item\"></option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col\">\r\n      <label>Name</label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"name\"\r\n        class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\"\r\n      />\r\n      <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.name.errors.reqiired\">Name is required</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span\r\n          *ngIf=\"loading\"\r\n          class=\"spinner-border spinner-border-sm mr-1\"\r\n        ></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/sections\" class=\"btn btn-link\"\r\n        >Cancel</a\r\n      >\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Roles } from './../../model/enums/roles.enum';\r\nimport { AuthService } from '../../shared/service/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  registerForm: FormGroup = new FormGroup({\r\n    username: new FormControl(''),\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n    repeatPassword: new FormControl(''),\r\n    role: new FormControl('')\r\n  });\r\n  roles: Array<string> = [];\r\n  loading = false;\r\n  submitted = false;\r\n  error = '';\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n  }\r\n  ngOnInit(): void {\r\n    for (let value in Roles)\r\n    if (typeof Roles[value] === 'number') this.roles.push(value);\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      repeatPassword: ['', Validators.required],\r\n      role: [this.roles[1]]\r\n    },\r\n    {validator: this.checkPasswords('password', 'repeatPassword')}\r\n    );\r\n  }\r\n  checkPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n      const passwordInput = group.controls[passwordKey],\r\n          passwordConfirmationInput = group.controls[passwordConfirmationKey];\r\n      if (passwordInput.value !== passwordConfirmationInput.value) {\r\n        return passwordConfirmationInput.setErrors({notSame: true});\r\n      }\r\n      else {\r\n          return passwordConfirmationInput.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(+Roles[this.f.role.value])\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid ) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.authService\r\n      .signUp(this.f.username.value, this.f.email.value, this.f.password.value, this.f.repeatPassword.value, +Roles[this.f.role.value]);\r\n\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n  <div class=\"card\">\r\n      <div class=\"card-body\">\r\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"form-group\">\r\n                  <label for=\"username\">Username</label>\r\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"email\">Username</label>\r\n                <input id = \"email\"  type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.email.errors.required\">Username is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"role\">Role</label>\r\n                <br>\r\n               <select formControlName = \"role\">\r\n                  <option *ngFor=\"let item of roles\" [label]=\"item\"\r\n                  [value]=\"item\"></option>\r\n               </select>\r\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                </div>\r\n            </div>\r\n              <div class=\"form-group\">\r\n                  <label for=\"password\">Password</label>\r\n                  <input id = \"password\" type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                      <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"repeatPassword\">Repeat Password</label>\r\n                <input id = \"repeatPassword\" type=\"password\" formControlName=\"repeatPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.repeatPassword.errors }\" />\r\n                <div *ngIf=\"submitted && f.repeatPassword.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.repeatPassword.hasError('required')\">Password is required</div>\r\n                    <div *ngIf=\"f.repeatPassword.hasError('notSame')\">Passwords do not match</div>\r\n                  </div>\r\n                </div>\r\n              <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                  <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                  Sign Up\r\n              </button>\r\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            <div>\r\n              <span\r\n                >Already have an account?\r\n                <span><a routerLink=\"/sign-in\">Log In</a></span></span\r\n              >\r\n            </div>\r\n\r\n          </form>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n","import { AddEditSectionComponent } from './components/sections-page/add-edit-section/add-edit-section.component';\nimport { VisitorHomePageComponent } from './components/visitor-home-page/visitor-home-page.component';\nimport { SectionsPageComponent } from './components/sections-page/sections-page.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CoachesPageComponent } from './components/coaches-page/coaches-page.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SectionSchedulesPageComponent } from './components/sectionSchedules-page/section-schedules-page.component';\nimport { AddEditGymComponent } from './components/home-page/add-edit-gym/add-edit-gym.component';\nimport { AddEditSectionScheduleComponent } from './components/sectionSchedules-page/add-edit-section-schedule/add-edit-section-schedule.component';\nimport { AddEditCoachComponent } from './components/coaches-page/add-edit-coach/add-edit-coach.component';\nimport { SubscribeComponent } from './components/sectionSchedules-page/subscribe-page/subscribe.component';\n\nconst routes: Routes = [\n  { path: '', component: HomePageComponent },\n  { path: 'coaches', component: CoachesPageComponent },\n  { path: 'visitor-home-page', component:VisitorHomePageComponent },\n  { path: 'sections', component: SectionsPageComponent},\n  { path: 'section-schedules-page', component:SectionSchedulesPageComponent},\n  { path: 'add-edit-section-page', component:AddEditSectionComponent},\n  { path: 'add-edit-section-schedule-page', component:AddEditSectionScheduleComponent},\n  { path: 'add-edit-gym-page', component:AddEditGymComponent},\n  { path: 'add-edit-coach-page', component: AddEditCoachComponent },\n  { path: 'subscribe-page', component: SubscribeComponent },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'sign-up', component: SignUpComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes), BrowserModule],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { TimeSpan } from './../../tools/timeSpan';\r\nexport class UpdateSectionSchredule {\r\n  constructor(\r\n    id: number,\r\n    sectionId: number,\r\n    startHour: number,\r\n    endHour: number\r\n  ) {\r\n    this.id = id;\r\n    this.sectionId = sectionId;\r\n    this.startHour = startHour;\r\n    this.endHour = endHour;\r\n  }\r\n\r\n  id: number;\r\n  sectionId: number;\r\n  startHour: number;\r\n  endHour: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SectionScheduleService } from 'src/app/shared/service/sectionSchedule.service';\r\nimport { LogService } from 'src/app/shared/service/log.service';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { TimeSpan } from 'src/app/tools/timeSpan';\r\n\r\n@Component({ templateUrl: 'add-edit-section-schedule.component.html' })\r\nexport class AddEditSectionScheduleComponent implements OnInit {\r\n  form: FormGroup = new FormGroup({\r\n    startHour: new FormControl(''),\r\n    endHour: new FormControl(''),\r\n  });\r\n\r\n  id: number;\r\n  sectionId: number;\r\n  startHour: TimeSpan;\r\n  endHour: TimeSpan;\r\n\r\n  isAddMode: boolean;\r\n  loading: boolean = false;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sectionScheduleService: SectionScheduleService,\r\n    private logger: LogService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.id = +history.state.id;\r\n    this.sectionId = +history.state.sectionId;\r\n    this.isAddMode = !this.id;\r\n    if (!this.isAddMode) {\r\n      this.startHour = history.state.startHour;\r\n      this.endHour = history.state.endHour;\r\n    }\r\n    this.form = this.formBuilder.group(\r\n      {\r\n        startHour: [this.isAddMode ? '' : TimeSpan.toStringValue(this.startHour), Validators.required],\r\n        endHour: [this.isAddMode ? '' : TimeSpan.toStringValue(this.endHour), Validators.required],\r\n      },\r\n      { validator: this.checkHours('startHour', 'endHour') }\r\n    );\r\n  }\r\n  checkHours(startHourField: string, endHourField: string) {\r\n    return (group: FormGroup) => {\r\n      const startHourContorl = group.controls[startHourField];\r\n      const endHourContorl = group.controls[endHourField];\r\n\r\n      const startHoursAndMinutes = startHourContorl.value.split(':');\r\n      const endHoursAndMinutes = endHourContorl.value.split(':');\r\n      if (startHoursAndMinutes[0] > endHoursAndMinutes[0]) {\r\n        return startHourContorl.setErrors({ notCorrect: true });\r\n      }\r\n      else if (startHoursAndMinutes[0] == endHoursAndMinutes[0]) {\r\n        if (startHoursAndMinutes[1] > endHoursAndMinutes[1])\r\n          return startHourContorl.setErrors({ notCorrect: true });\r\n\r\n        if (startHoursAndMinutes[1] == endHoursAndMinutes[1])\r\n          return endHourContorl.setErrors({ notCorrect: true });\r\n      }\r\n      return startHourContorl.setErrors(null);\r\n    };\r\n  }\r\n  get f() {\r\n    return this.form.controls;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.isAddMode) {\r\n      this.createSectionSchedule();\r\n    } else {\r\n      this.updateSectionSchedule();\r\n    }\r\n  }\r\n\r\n  private createSectionSchedule(): void {\r\n    this.sectionScheduleService\r\n      .add(\r\n        this.sectionId,\r\n        TimeSpan.FromStringToTimeSpan(this.f.startHour.value).TotalSeconds,\r\n        TimeSpan.FromStringToTimeSpan(this.f.endHour.value).TotalSeconds\r\n      )\r\n      .subscribe((result) => {\r\n        this.router.navigate(['section-schedules-page']);\r\n      });\r\n  }\r\n\r\n  private updateSectionSchedule(): void {\r\n    this.sectionScheduleService\r\n      .update(\r\n        this.id,\r\n        this.sectionId,\r\n        TimeSpan.FromStringToTimeSpan(this.f.startHour.value).TotalSeconds,\r\n        TimeSpan.FromStringToTimeSpan(this.f.endHour.value).TotalSeconds\r\n      )\r\n      .subscribe((result) => {\r\n        this.router.navigate(['section-schedules-page']);\r\n      });\r\n  }\r\n\r\n}\r\n","<h1 *ngIf=\"isAddMode\">Add section schedule</h1>\r\n<h1 *ngIf=\"!isAddMode\">Edit section schedule</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-row\">\r\n    <div class=\"form-group\">\r\n      <input\r\n        type=\"time\"\r\n        formControlName=\"startHour\"\r\n        class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.startHour.errors }\"\r\n      />\r\n      <div *ngIf=\"submitted && f.startHour.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.startHour.errors.reqiired\">Start hour is required</div>\r\n        <div *ngIf=\"f.startHour.hasError('notCorrect')\">Value is not correct</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input\r\n        type=\"time\"\r\n        formControlName=\"endHour\"\r\n        class=\"form-control\"\r\n        [ngClass]=\"{ 'is-invalid': submitted && f.endHour.errors }\"\r\n      />\r\n      <div *ngIf=\"submitted && f.endHour.errors\" class=\"invalid-feedback\">\r\n        <div *ngIf=\"f.endHour.errors.reqiired\">End hour is required</div>\r\n        <div *ngIf=\"f.endHour.hasError('notCorrect')\">Value is not correct</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n        <span\r\n          *ngIf=\"loading\"\r\n          class=\"spinner-border spinner-border-sm mr-1\"\r\n        ></span>\r\n        Save\r\n      </button>\r\n      <a routerLink=\"/section-schedules-page\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n  </div>\r\n</form>\r\n","export class UserRequest{\r\n  id: number;\r\n  roleId: number;\r\n  name: string;\r\n  email: string;\r\n\r\n  constructor(\r\n    id: number,\r\n    roleId: number,\r\n    name: string,\r\n    email: string\r\n) {\r\n    this.id = id\r\n    this.roleId = roleId\r\n    this.name = name\r\n    this.email = email\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}